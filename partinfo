#!/usr/bin/perl
$ID = q$Id$;
#
# partinfo -- Show summary of space on AFS server partitions.
#
# Written by Neil Crellin <neilc@stanford.edu>
# Modifications by Russ Allbery <rra@stanford.edu>
# Copyright 1998, 1999 Board of Trustees, Leland Stanford Jr. University
#
# Takes an AFS server as an argument and then runs vos partinfo on it,
# parsing the output and producing a slightly more verbose report that
# includes percent full on each partition and how much more data can be
# added to that partition before putting it over 80% full.

# Make sure our arguments make sense.
$0 =~ s%.*/%%;
my $color;
if ($ARGV[0] eq '-c') {
    shift;
    $color = 1;
    require Term::ANSIColor;
}
die "Usage: $0 <afssvr>\n" if (@ARGV != 1);
die "$ARGV[0] is not an AFS server\n" unless ($ARGV[0] =~ /^afssvr[1-9]/);

# We can't use formats if we're using color because format mangles color
# output.  *sigh*
if ($color) {
    printf ("%18s: %10s %10s %10s %8s %10s\n", 'Partition', 'Total', 'Used',
            'Free', '%Full', 'Available');
}

# Run vos partinfo and parse the output.  If we're doing color, we have to
# use printf instead of formats.
my ($partition, $used, $total, $free, $usable, $pfree);
undef $-;
open (PARTINFO, "vos partinfo $ARGV[0] |") or die "$0: can't fork: $!\n";
while (<PARTINFO>) {
    if (m%^Free space on partition (/vicep\S+): (\d+) K .* total (\d+)$%) {
        ($partition, $free, $total) = ($1, $2, $3);
        $partition = "$ARGV[0] $partition";
        $used = $total - $free;
        $usable = int ($free - 0.2 * $total);
        $pfree = 100 * $used / $total;
        if ($color) {
            my $c;
            if    ($pfree < 60) { $c = Term::ANSIColor::color ('green')  }
            elsif ($pfree > 80) { $c = Term::ANSIColor::color ('red')    }
            printf ("%18s: %10d %10d %10d %s%7.2f%%%s %10d\n", $partition,
                    $total, $used, $free, $c, $pfree,
                    Term::ANSIColor::color ('reset'), $usable);
        } else {
            write;
        }
    } else {
        print;
    }
}
close PARTINFO;

# The format of our output, including a header that explains the columns.
format STDOUT_TOP =
        Partition       Total       Used       Free    %Full  Available
.

format STDOUT =
@>>>>>>>>>>>>>>>>: @>>>>>>>>> @>>>>>>>>> @>>>>>>>>> @###.##% @>>>>>>>>>
$partition,        $total,    $used,     $free,     $pfree,  $usable
.
